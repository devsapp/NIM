# ------------------------------------
#   官方手册: https://docs.serverless-devs.com/user-guide/aliyun/#fc3
#   常见小贴士: https://manual.serverless-devs.com/user-guide/tips/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------
edition: 1.0.0
name: ai_story
access: default

vars: 
  region: "cn-shanghai"
  serviceName: "Search_Files"
  functionName: "nim_aistory" 
  imageUrlAIStory: registry.cn-shanghai.aliyuncs.com/aliyun-fc/nim-nvidia-fastpitch-hifigan-tts-1.0.0-fc-1:searchfile-frontend-v1
  imageUrlMistral: registry.cn-shanghai.aliyuncs.com/aliyun-fc/nim-nvidia-fastpitch-hifigan-tts-1.0.0-fc-1:nim-mistralai-mistral-7b-instruct-v0.3-1.1.2
  apiKey: "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"
  service:
    name: ${vars.serviceName}
    description: 'AI_Story 部署到函数计算'
    internetAccess: true
    logConfig: auto
    vpcConfig: auto
    nasConfig: auto

services:
  # FrontEnd
  searchfile:
    component: fc
    actions: 
      post-deploy: 
        - component: fc ondemand put --qualifier LATEST --max 1
    props:
      region: "${vars.region}" 
      service: ${vars.service}
      function:
        name: ${vars.functionName}
        description: "NIM_AISTORY"

        handler: index.handler
        timeout: 600
        diskSize: 512
        caPort: 8501
        # 运行时
        runtime: custom-container
        customContainerConfig:
          args: ''
          accelerationType: Default
          image: ${vars.imageUrlAIStory}
          accelerationInfo:
            status: Preparing
          command: ''
          webServerMode: true
        # 规格
        instanceConcurrency: 100
        cpu: 8
        memorySize: 32768
        environmentVariables:
          BASE_URL_MISTRAL: "${mistral.output.url.system_url}/v1"
          API_KEY: "${vars.apiKey}"

      triggers:
        - name: defaultTrigger
          description: ''
          type: http
          qualifier: LATEST
          config:
            methods:
              - GET
              - POST
              - PUT
              - DELETE
            authType: anonymous
            disableURLInternet: false

      customDomains:
        - domainName: auto
          protocol: HTTP
          routeConfigs:
            - path: /*


  #backend
  mistral:
    component: fc
    actions: 
      post-deploy: 
        - component: fc provision put --qualifier LATEST --target 1 --enable-idle-billing true
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: "mistral"
        description: AI_Story 后端 mistral 函数

        handler: index.handler
        timeout: 600
        diskSize: 10240
        caPort: 8000
        instanceType: fc.gpu.ada.1

        # 运行时
        runtime: custom-container
        customContainerConfig:
          args: ''
          accelerationType: Default
          image: ${vars.imageUrlMistral}
          accelerationInfo:
            status: Preparing
          command: >-
            ["bash","-c","id; /opt/nvidia/nvidia_entrypoint.sh python3 -m
            vllm_nvext.entrypoints.launch --enforce-eager; python3 -m
            http.server 8000"]
          webServerMode: true

        instanceConcurrency: 10
        cpu: 8
        memorySize: 65536
        gpuMemorySize: 49152
        asyncConfiguration: {}

        environmentVariables:
          NGC_API_KEY: "${vars.apiKey}" 
          NIM_CACHE_PATH: "/mnt/auto"
          TLLM_LOG_LEVEL: "ERROR"
          UVICORN_LOG_LEVEL: "info"
          VLLM_LOGGING_CONFIG_PATH: "/etc/nim/config/python_readable_logging_config.json"
          VLLM_NVEXT_LOG_LEVEL: "INFO"
          VLLM_NVEXT_LOGGING_CONFIG_PATH: "/etc/nim/config/python_readable_logging_config.json"

        triggers:
          - name: defaultTrigger
            description: ''
            type: http
            qualifier: LATEST
            config:
              methods:
                - GET
                - POST
                - PUT
                - DELETE
              authType: anonymous
              disableURLInternet: false

  initial:
    component: fc
    actions: 
      post-deploy:
        - component: fc invoke --service_name ${this.output.service_name} --function ${this.output.function_name} 
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: init
        description: 模型初始化函数
        handler: main.handler
        timeout: 3600
        diskSize: 512
        codeUri: './initial'
        runtime: python3.10
        cpu: 16
        instanceConcurrency: 1
        # cpu: 8
        memorySize: 32768